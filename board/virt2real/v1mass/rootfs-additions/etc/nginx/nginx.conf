user  root;
worker_processes  1;

error_log  /var/log/nginx/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        /tmp/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  off;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;
        access_log off;

        location / {
            root   /var/www;
            index  index.php index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
	#location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            root           /var/www;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /var/www$fastcgi_script_name;
            include        fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}

        
#	location /dash.js {
#	    root /tmp;
#	}

	location /hls {
	    root /tmp;
	}

    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    server {
        listen       8080;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    
    	location /dash {
            root /tmp/;
            add_header Cache-Control no-cache;
        }
    }


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}

rtmp_auto_push on;
rtmp_auto_push_reconnect 1s;

rtmp {

    max_connections 5;

    server {
            listen 1935;
            publish_time_fix off;
            #max_streams 5;
            #chunk_size 4096;
            #max_message 256K;
            #respawn off;
            #respawn_timeout 10s;
            
            application live {
                    live on;
                    #meta off; # default= copy
                    #interleave on;
                    #wait_key on;
                    #wait_video on;
                    #publish_notify on;
                    #drop_idle_publisher 10s;
                    #sync 10ms;
                    #play_restart on;
                    #idle_streams off;
                    

		    hls off;
		    hls_path /tmp/hls;
		    hls_fragment 3s;
		    hls_playlist_length 5m;
		    hls_sync 100ms;
		    hls_continuous off;
		    hls_nested on;
		    hls_cleanup on;
		    hls_fragment_naming system;
		    hls_fragment_slicing plain;
		    hls_type live;
		    

		    #dash on;
		    #dash_path /tmp/dash;
		    #dash_fragment 15s;
            }
    }
}


